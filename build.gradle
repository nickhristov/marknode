/*
 * Copyright 2014-2016 Wise Persist Pty Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    group = 'org.marknode'
    version = '1.0.1-SNAPSHOT'
}

def quality_check = project.hasProperty('check') && check == 'true'
println("quality check: " + quality_check)

subprojects {
    if (quality_check) {
        apply from: "$rootDir/gradle/checkstyle.gradle"
        apply from: "$rootDir/gradle/pmd.gradle"
        apply from: "$rootDir/gradle/findbugs.gradle"
        apply from: "$rootDir/gradle/jacoco.gradle"
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    project.extensions.idea.module.iml {
        withXml {
            it.asNode().component.
                    find { it.@name == 'NewModuleRootManager' }.@LANGUAGE_LEVEL = target.level
        }
    }

    repositories {
        mavenCentral()
    }

    // ensure that test resources (src/test/resources) are added to CLASSPATH;
    // see http://forums.gradle.org/gradle/topics/tests_arent_executed_when_setting_the_test_runtimeclasspath and
    // http://gradle.org/docs/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:classpath
    sourceSets {
        main {
            runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
        }
        test {
            runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
        }
    }

    test {
        // enable TestNG support (default is JUnit)
        useTestNG() {
            suiteXmlBuilder().suite(name: 'marknode', parallel: 'tests') {
                test(name: 'all-tests') {
                    packages {
                        'package'(name: 'org.marknode.*')
                    }
                }
            }
            excludeGroups 'integration', 'stress'
            // useDefaultListeners = true produces the testng-results.xml files used by bamboo
            // to display test result summaries
            useDefaultListeners = true
        }
    }

    configurations.all {
        resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()

            // force certain versions of dependencies (including transitive)
            //  *append new forced modules:
            force 'com.google.guava:guava:18.0',
                  'com.google.code.findbugs:jsr305:2.0.3'
        }
    }

    dependencies {
        // utility dependencies
        compile 'com.google.guava:guava:18.0'

        compile 'com.google.code.findbugs:annotations:2.0.3'
        compile 'com.google.code.findbugs:jsr305:2.0.3'

        // test dependencies
        testCompile 'org.testng:testng:6.8.13'
        testCompile "org.mockito:mockito-core:1.10.19"
    }
}

build {
    doFirst {
        delete 'out'
    }
}
